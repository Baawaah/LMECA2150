function [result]=Rankine_cycle(T_river, deltaT_river, p_turb, T_turb, eta_is_turb, eta_pomp, eta_meca, P_eff)
clc
close all
if nargin==0
    T_river=15+273.15;
    deltaT_river=15;
    p_turb=200;
    T_turb=525;
    eta_is_turb=0.88;
    eta_pomp=1;
    eta_meca=0.9;
    P_eff=400;
    
    data.T_river=15+273.15;
    data.deltaT_river=15;
    data.p_turb=200;
    data.T_turb=525;
    data.eta_is_turb=0.88;
    data.eta_pomp=1;
    data.eta_meca=0.9;
    data.P_eff=400;
end

%% etat de reference
data.T_ref=25;
data.p_ref=1;
data.h_ref=XSteam('h_pT',p_ref,T_ref);
data.s_ref=XSteam('s_pT',p_ref,T_ref);

%% Entrée turbine :
% result(3).p = p_turb;
% result(3).T = T_turb;
% result(3).h = XSteam('h_pT',result(3).p,result(3).T);
% result(3).s = XSteam('s_pT',result(3).p,result(3).T);
% result(3).x = XSteam('x_ph',result(3).p,result(3).h);
% result(3).ex = exergy(result(3).h, h_ref, result(3).s, s_ref, T_ref);
data = ST_turbine(data);

%% Sortie turbine :
data.result(4).p = data.result(3).p;
s_4_is = data.result(3).s;
h_4_is = XSteam('h_ps', data.result(4).p, s_4_is);
data.result(4).h = data.result(3).h + eta_is_turb*(h_4_is-result(3).h);
data.result(4).T = XSteam('T_ph', data.result(4).p, data.result(4).h);
data.result(4).x = XSteam('x_ph', data.result(4).p, data.result(4).h);
data.result(4).s = XSteam('s_ph', data.result(4).p, data.result(4).h);
data.result(4).ex = exergy(data.result(4).h, data.h_ref, data.result(4).s, data.s_ref, data.T_ref);

%% Sortie de condenseur (liquide saturé : x=0) :
data.result(1).T = data.T_river+data.deltaT_river;
data.result(1).p = XSteam('psat_T',data.result(1).T)
data.result(1).h = XSteam('hL_p', data.result(1).p);
data.result(1).s = XSteam('sL_p', data.result(1).p);
data.result(1).x = 0;
data.result(1).ex = exergy(data.result(1).h, data.h_ref, data.result(1).s, data.s_ref, data.T_ref);

%% Entrée chaudiere : liquide non saturé
data.v_eau = 1/1000; %(volume massique eau)
data.result(20).p = data.result(3).p;
data.result(20).h = data.result(1).h+data.v_eau*(data.result(20).p-data.result(1).p)*eta_pomp;
data.result(20).T = XSteam('T_ph',result(20).p,result(20).h);
data.result(20).s = XSteam('s_ph',result(20).p,result(20).h);
data.result(20).x = XSteam('x_ph',result(20).p,result(20).h);
data.result(20).ex = exergy(result(20).h, h_ref, result(20).s, s_ref, T_ref);

%% Chaudière : Etat liquide saturé
result(21).p = result(3).p;
result(21).h = XSteam('hL_p',result(21).p);
result(21).T = XSteam('Tsat_p',result(21).p);
result(21).s = XSteam('sL_p',result(21).p);
result(21).x = 0;
result(21).ex = exergy(result(21).h, h_ref, result(21).s, s_ref, T_ref);

%% Chaudière : Etat vapeur saturée
result(22).p = result(3).p;
result(22).h = XSteam('hV_p',result(22).p);
result(22).T = XSteam('Tsat_p',result(22).p);
result(22).s = XSteam('sV_p',result(22).p);
result(22).x = 1;
result(22).ex = exergy(result(22).h, h_ref, result(22).s, s_ref, T_ref);


%% Exergie
    function ex = exergy(h,h_ref,s,s_ref,T_ref)
        ex = (h-h_ref+T_ref*(s-s_ref));
    end


%% Plot 
figure
hold on;
title('Rankine-Hirn Cycle')
xlabel('s[kJ/kgK]')
ylabel('T[K]')
plot(result(1).s,result(1).T,'.','MarkerSize',15)
plot(result(20).s,result(20).T,'.','MarkerSize',15)
plot(result(21).s,result(21).T,'.','MarkerSize',15)
plot(result(22).s,result(22).T,'.','MarkerSize',15)
plot(result(3).s,result(3).T,'.','MarkerSize',15)
plot(result(4).s,result(4).T,'.','MarkerSize',15)

grid off

end